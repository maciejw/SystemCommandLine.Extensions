name: CI & NuGet Release

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'          # e.g. v1.2.3 -> triggers release
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build_test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Pack (artifact only)
        if: startsWith(github.ref, 'refs/tags/v') == false
        run: dotnet pack --configuration Release -o ./artifacts /p:ContinuousIntegrationBuild=true

      - name: Upload package artifact (non-release)
        if: startsWith(github.ref, 'refs/tags/v') == false
        uses: actions/upload-artifact@v4
        with:
          name: nupkgs
          path: ./artifacts/*.nupkg

  publish_nuget:
    name: Publish to NuGet.org
    needs: build_test
    if: startsWith(github.ref, 'refs/tags/v')         # only on version tags
    runs-on: ubuntu-latest
    environment:
      name: nuget
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Derive version from tag: v1.2.3 -> 1.2.3
      - name: Derive version
        id: ver
        shell: bash
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore /p:ContinuousIntegrationBuild=true

      - name: Pack (tagged version)
        run: dotnet pack --configuration Release -o ./artifacts /p:ContinuousIntegrationBuild=true /p:Version=${{ steps.ver.outputs.VERSION }}

      - name: Push to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push "./artifacts/SystemCommandLine.Extensions.*.nupkg" \
            --api-key "$NUGET_API_KEY" \
            --source "https://api.nuget.org/v3/index.json" \
            --skip-duplicate
